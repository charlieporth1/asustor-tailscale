name: GitHub Actions Auto Builder
env:
   AARCH64: arm64
   X86_64: amd64
   env_file: .env
   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token

on:
  push:
  schedule:
    - cron: '0 6 * * *'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Builder
        run: export RELEASE_VERSION=$(curl --silent "https://api.github.com/repos/tailscale/tailscale/tags" | jq -r '.[0].name'); echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_ENV

      - run: sudo sed -i "s|RELEASE_VERSION|$RELEASE_VERSION|g" apk/CONTROL/config.json

      - run: sudo chown $USER:$USER -R .
      - run: echo "ARCH=${{ env.X86_64 }}" >> $GITHUB_ENV
      - run: sudo ./scripts/build.sh
      - run: sudo ./scripts/apkg-tools_py3.py create apk

      - run: sudo sed -i "s|x86_64|${{ env.AARCH64 }}|g" apk/CONTROL/config.json

      - run: echo "ARCH=${{ env.AARCH64 }}" >> $GITHUB_ENV
      - run: sudo ./scripts/build.sh
      - run: sudo ./scripts/apkg-tools_py3.py create apk 
      - run: |
          sudo git config user.name github-actions
          sudo git config user.email github-actions@github.com
          sudo git add .
          sudo git commit -m "Automatic Version Build from GitHub Action at: `date` $RELEASE_VERSION"
          sudo git tag -a $RELEASE_VERSION -m v$RELEASE_VERSION
          sudo git push origin HEAD:master

      - uses: actions/upload-artifact@v3
        with:
          name: tailscale_${{ env.RELEASE_VERSION }}_${{ env.AARCH64 }}.apk
          path: tailscale_${{ env.RELEASE_VERSION }}_${{ env.AARCH64 }}.apk
      - uses: actions/upload-artifact@v3
        with:
          name: tailscale_${{ env.RELEASE_VERSION }}_${{ env.X86_64 }}.apk
          path: tailscale_${{ env.RELEASE_VERSION }}_${{ env.X86_64 }}.apk
